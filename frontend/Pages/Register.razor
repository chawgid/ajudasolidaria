@page "/registrar"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@using System.ComponentModel.DataAnnotations

<h3>Cadastrar-se</h3>
<br/>
<br/>
<div class="row">
    <div class="col-md-4">
        <EditForm Model="@userModel" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label class="control-label">Nome Completo:</label>
                <InputText @bind-Value="userModel.nome" class="form-control" />
            </div>
            <div class="form-group">
                <label class="control-label">Data de Nascimento:</label>
                <InputDate @bind-Value="userModel.dataNascimento" class="form-control"/>        
            </div>
            <div class="form-group">
                <label class="control-label">CPF:</label>
                <InputText @bind-Value="userModel.cpf" class="form-control" />                
            </div>
            <div class="form-group">
                <label class="control-label">Telefone:</label>
                <InputText @bind-Value="userModel.telefone" class="form-control" />                
            </div>
            <div class="form-group">
                <label class="control-label">CEP:</label>
                 <InputText @bind-Value="userModel.cep" class="form-control"/>                
            </div>
            <div class="form-group">
                <label class="control-label">Endereço:</label>
                <InputText @bind-Value="userModel.endereco" class="form-control"/>                
            </div>
            <div class="form-group">
                <label class="control-label">Número:</label>
                <InputText @bind-Value="userModel.numero" class="form-control"/>                
            </div>
            <div class="form-group">
                <label class="control-label">Bairro:</label>
                <InputText @bind-Value="userModel.bairro" class="form-control"/>                
            </div>
            @if (states.Length > 0 )
            {
                <div class="form-group">
                    <label class="control-label">Estado:</label>
                    <select id="SearchStateId" class="form-control" @onchange="ChangedValue">
                        <option selected disabled value="-1"> Selecione um Estado</option>
                        @foreach (var state in states)
                        {
                            <option value="@state">@state</option>
                        }
                    </select>
                </div>
            }

            <div class="form-group">
                <label class="control-label">Cidade:</label>
                <InputSelect @bind-Value="userModel.cidade" class="form-control" >
                    <option selected disabled value="-1"> Selecione uma Cidade</option>
                    @if (cities.Length > 0 )
                    {
                        @foreach (var city in cities)
                        {
                            <option value="@city.cidade">@city.cidade</option>
                        }
                    }
                </InputSelect>
            </div>            
            
            <button class="btn btn-outline-primary btn-sm" type="submit">Registrar</button>
            <button type="button" class="btn btn-outline-primary btn-sm" @onclick="Voltar">Voltar</button>
        </EditForm>
    </div>
</div>

@code {
    private string[] states;
    private City[] cities;
    private UserModel userModel = new UserModel()
    {
        dataNascimento = DateTime.Now
    };

    protected override async Task OnInitializedAsync()
    {
        states = new string[26];
        cities = new City[0];
        states = await Http.GetJsonAsync<string[]>("https://ajudasolidariaapi.azurewebsites.net/v1/estado");
    }

    private async Task ChangedValue(ChangeEventArgs e)
    {
        userModel.estado = e.Value.ToString();
        userModel.cidade = "-1";
        cities = await Http.GetJsonAsync<City[]>("https://ajudasolidariaapi.azurewebsites.net/v1/estado/" + userModel.estado + "/cidades");
    }

    private async Task HandleValidSubmit()
    {
        userModel.status = true;

        await Http.PostJsonAsync("https://ajudasolidariaapi.azurewebsites.net/v1/pessoa", userModel);

        NavigationManager.NavigateTo("/");
    }

    void Voltar()
    {
        NavigationManager.NavigateTo("/");
    }

    public class City
    {
        public string cidade { get; set; }
        public string siglaUF { get; set; }
    }

    public class UserModel
    {
        [Required(ErrorMessage =
            "Nome é Obrigatório")]
        [Display(Name = "Nome")]
        public string nome { get; set; }
        [Required(ErrorMessage =
            "Data de Nascimento é Obrigatório")]
        [Display(Name = "Data de Nascimento")]
        public DateTime dataNascimento { get; set; }
        [Required(ErrorMessage =
            "CPF é Obrigatório")]
        [Display(Name = "CPF")]
        public string cpf { get; set; }
        [Required(ErrorMessage =
            "Número do Telefone é Obrigatório")]
        [Display(Name = "Telefone")]
        public string telefone { get; set; }
        [Required(ErrorMessage =
            "CEP é Obrigatório")]
        [Display(Name = "CEP")]
        public string cep { get; set; }
        [Required(ErrorMessage =
            "Endereço é Obrigatório")]
        [Display(Name = "Endereço")]
        public string endereco { get; set; }
        [Required(ErrorMessage =
            "Número da Residência é Obrigatório")]
        [Display(Name = "Número")]
        public string numero { get; set; }
        [Required(ErrorMessage =
            "Cidade é Obrigatório")]
        [Display(Name = "Cidade")]
        public string cidade { get; set; }
        [Required(ErrorMessage =
            "Bairro é Obrigatório")]
        [Display(Name = "Bairro")]
        public string bairro { get; set; }
        [Required(ErrorMessage =
            "Estado é Obrigatório")]
        [Display(Name = "Estado")]
        public string estado { get; set; }
        public string coordenadas { get; set; }
        public bool status { get; set; }
    }
}